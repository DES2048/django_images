# Generated by Django 3.1 on 2024-04-06 11:52

from django.db import migrations, models
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.apps.registry import Apps
import django.db.models.deletion

def fill_image_forward(apps:Apps, schema_editor: BaseDatabaseSchemaEditor):
    FavImageModel = apps.get_model("image_picker", "FavoriteImage")
    ImageModel = apps.get_model("image_picker", "Image")

    db_alias = schema_editor.connection.alias
    # get image name and gallery from favs
    fav_images = FavImageModel.objects.using(db_alias).all()
    #  get or create it from Image
    for fav_image in fav_images:
        image,_ = ImageModel.objects.get_or_create(gallery_id=fav_image.gallery_id,
                                                 filename=fav_image.name)
        fav_image.image = image
        fav_image.save()
    # add it to image field

def fill_name_forward(apps:Apps, schema_editor: BaseDatabaseSchemaEditor):
    pass


def fill_name_reverse(apps:Apps, schema_editor: BaseDatabaseSchemaEditor):
    FavImageModel = apps.get_model("image_picker", "FavoriteImage")
    
    db_alias = schema_editor.connection.alias
    # get images from favs
    fav_images = FavImageModel.objects.using(db_alias).all().select_related("image")
    #  insert gallery_id and name into favs
    for fav_image in fav_images:
        
        fav_image.name = fav_image.image.filename
        fav_image.save()
    # add it to image field


def fill_gallery_reverse(apps:Apps, schema_editor: BaseDatabaseSchemaEditor):
    FavImageModel = apps.get_model("image_picker", "FavoriteImage")
    
    db_alias = schema_editor.connection.alias
    # get images from favs
    fav_images = FavImageModel.objects.using(db_alias).all().select_related("image")
    #  insert gallery_id and name into favs
    for fav_image in fav_images:
        
        fav_image.gallery_id = fav_image.image.gallery_id
        fav_image.save()
    # add it to image field

def fill_image_reverse(apps:Apps, schema_editor: BaseDatabaseSchemaEditor):
    FavImageModel = apps.get_model("image_picker", "FavoriteImage")
    
    db_alias = schema_editor.connection.alias
    # get images from favs
    fav_images = FavImageModel.objects.using(db_alias).all().select_related("image")
    #  insert gallery_id and name into favs
    for fav_image in fav_images:
        
        fav_image.name = fav_image.image.filename
        fav_image.gallery_id = fav_image.image.gallery_id
        fav_image.save()
    # add it to image field

class Migration(migrations.Migration):

    dependencies = [
        ('image_picker', '0007_auto_20240319_1440'),
    ]

    operations = [
        migrations.AddField(
            model_name='favoriteimage',
            name='image',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='image_picker.image'),
        ),
        migrations.RunPython(code=fill_image_forward, reverse_code=migrations.RunPython.noop),
        migrations.AlterField(
            model_name='favoriteimage',
            name='image',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='image_picker.image')
        ),
        # for reversing migration, we must set reversible fields to null
        migrations.AlterField(
            model_name='favoriteimage',
            name='gallery',
            field=models.ForeignKey(null=True,to="Gallery", on_delete=django.db.models.deletion.DO_NOTHING, db_index=True)
        ),
        migrations.RunPython(code=migrations.RunPython.noop, reverse_code=fill_gallery_reverse),
        migrations.RemoveField(
            model_name="favoriteimage",
            name="gallery",
        ),
        migrations.AlterField(
            model_name='favoriteimage',
            name='name',
            field=models.CharField(max_length=255, db_index=True, null=True)
        ),
        migrations.RunPython(code=migrations.RunPython.noop, reverse_code=fill_name_reverse),
        migrations.RemoveField(
            model_name="favoriteimage",
            name="name"
        )
    ]
